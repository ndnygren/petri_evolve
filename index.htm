
<!DOCTYPE HTML>
<html>
	<head>
		<title>Petri Calc Sandbox</title>
		<script type="text/javascript" src="petri_calc.js"></script>
		<script type="text/javascript" src="petri_canvas.js"></script>
		<link href="style.css" rel="stylesheet" type="text/css" />
		<script type="text/javascript">
			function load_network_def() {
				var net_obj, init_obj;
				try { net_obj = JSON.parse(document.getElementById("network_input").value); }
				catch (e) { alert("failed to parse network defintion."); }
				try { init_obj = JSON.parse(document.getElementById("initial_input").value); }
				catch (e) { alert("failed to parse initial values."); }
				var table = calcVectTable(init_obj, net_obj,150);
				document.getElementById("output_div").innerHTML = vectTableToHTML(table);
				var cw = new canvasWriter(document.getElementById("chart_canvas"));
				cw.setSizeBasedOnDataSet(table);
				cw.reset();
				cw.drawAxis();
				cw.addCursor("heat", table[0]["heat"], "red");
				cw.addCursor("wood", table[0]["wood"], "brown");
				for (x in table) {
					cw.drawFromCursor("heat", table[x]["heat"]);
					cw.drawFromCursor("wood", table[x]["wood"]);
				}
			}
		</script>
	</head>
	<body>
		<h1>Petri Calc Sandbox</h1>
		<div id="main_content_div">
			<table>
				<tr>
					<td>Enter network definition:</td>
					<td><textarea id="network_input">
			[
				{"name": "h_out", "input": ["heat"], "output": [], "rate": 0.05},
				{"name": "burn", "input": ["wood"], "output": ["heat"], "rate": 0.05},
				{"name": "h_in", "input": [], "output": ["heat"], "rate": 0.5}
			]
				</textarea></td></tr>
				<tr><td>Enter initial settings:</td>
				<td><textarea id="initial_input"> {"heat":50.0, "wood":50} </textarea>
				</td></tr>
	</table>
			<button onclick="load_network_def();">Start</button>

		</div>
		<div id="canvas_div"><canvas id="chart_canvas"></canvas><div>
		<div id="output_div"><div>
	</body>

</html>
