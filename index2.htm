
<!DOCTYPE HTML>
<html>
	<head>
		<title>Petri Diag Sandbox</title>
		<script type="text/javascript" src="petri_calc.js"></script>
		<script type="text/javascript" src="petri_canvas.js"></script>
		<script type="text/javascript" src="petri.js"></script>
		<script type="text/javascript" src="examples.js"></script>
		<script type="text/javascript">
			function readPetriInput()
{
				var formstring = document.getElementById("network_input").value;
				var net_obj, commands, last;
				try{
					net_obj = JSON.parse(formstring);
				} catch (e) {
					throw("Could not read network input.");
				}
				commands = readCommand(net_obj);
				var mtx = toStateTransMtx(commands);
				var serlist = mtxToSerList(mtx);
				var shorted = removeAll2ndOrder(serlist);
				var output = "";
				var fact = new petriSVGfact();
				var comb = new SPGParNode(null, null);
				output += JSON.stringify(commands, null, 2);
				output += "<br/> states:" + JSON.stringify(stateList(commands));
				output += "<br/> transistions:" + JSON.stringify(transList(commands));
				output += "<br/> idx:" + JSON.stringify(StateTransCommonIdx(stateList(commands), transList(commands)));
				output += "<br/> transistions:" + JSON.stringify(toStateTransMtx(commands));
				output += "<br/> serList:" + JSON.stringify(serlist);
				output += "<br/> counts:" + JSON.stringify(countNodeOrders(serlist));
				output += "<br/> new serlist:" + JSON.stringify(findAndRemove2ndOrderNode(serlist));
				output += "<br/> shortened:" + JSON.stringify(shorted);
				normalizeAndSortSerList(shorted);
				output += "<br/> shortened:" + JSON.stringify(shorted);
				output += "<br/> parmerge:" + JSON.stringify(mergeAllPar(serlist));
				comb.data = mergeAllPar(serlist);
				comb.data = mergeAllLone(comb.data);
				output += "<br/>classify leaves: " + SPGDebug(comb.data);
				last = serNodeToXY(comb);

				output += "<br/> xy:" + JSON.stringify(last);
				output += "<br/> " + JSON.stringify(withNameAndType(last, commands));
				output += "<br/> " + fact.make(withNameAndType(last, commands), commands);
				document.getElementById("output_box").innerHTML = output;
			}
			</script>
		<link href="style.css" rel="stylesheet" type="text/css" />
	</head>
	<body>
		<h1>Petri Diag Sandbox</h1>
		<h2>Net Definition:</h2>
		<div id="main_content_div">
			Enter network definition:
			<textarea id="network_input">[ { "name": "seep", "input": [], "output": ["water"], "rate": 1 },
				{ "name": "pool", "input": ["water"], "output": [], "rate": 1 },
				{ "name": "grow", "input": ["grass","water","soil"], "output": [ "grass","grass" ], "rate": 1 },
				{ "name": "die", "input": ["grass"], "output": ["soil"], "rate": 1 }
			]
			</textarea>
			<button onclick="readPetriInput()">Load</button>
		</div>
		<h2>Output:</h2>
		<div id="output_box">
	</body>
</html>

